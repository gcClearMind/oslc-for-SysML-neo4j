<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>org.example</groupId>
    <artifactId>neo4j-for-SysML-neo4j</artifactId>
    <version>1.0-SNAPSHOT</version>


    <properties>
        <java.version>17</java.version>
        <jersey.version>3.0.0</jersey.version>
        <!--        <version.lyo>4.1.0</version.lyo>-->
        <version.lyo>6.0.0-SNAPSHOT</version.lyo>
        <swagger.version>2.2.7</swagger.version>
        <swagger-ui.version>3.52.5</swagger-ui.version>


        <v.lucene>9.5.0</v.lucene>
        <!--        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>-->
    </properties>

    <repositories>
        <repository>
            <id>sonatype-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <profiles>
        <profile>
            <!-- some servlet containers (Tomcat) does not ship with a JSTL impl
            In such cases, run with this profile-->
            <id>with-jstl-impl</id>
            <dependencies>
                <!-- Start of user code profile_dependencies
                -->
                <!-- TODO: Add additional dependencies to this profile here to avoid them be overridden upon future re-generation -->
                <!-- End of user code
                -->
                <dependency>
                    <groupId>jakarta.servlet.jsp.jstl</groupId>
                    <artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
                    <version>3.0.0</version>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.web</groupId>
                    <artifactId>jakarta.servlet.jsp.jstl</artifactId>
                    <version>3.0.1</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>


    <dependencies>
        <!--        springboot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-neo4j</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-neo4j</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jersey</artifactId>
        </dependency>


        <!-- Specific dependencies -->
        <!-- Start of user code dependencies
        -->
<!--        <dependency>-->
<!--            <groupId>co.oslc.refimpl</groupId>-->
<!--            <artifactId>lib-common</artifactId>-->
<!--            <version>0.0.1-SNAPSHOT</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>${v.lucene}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queryparser</artifactId>
            <version>${v.lucene}</version>
        </dependency>

        <!-- End of user code
          -->

        <!-- Swagger dependencies -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-jaxrs2</artifactId>
            <version>${swagger.version}</version>
            <exclusions>
                <exclusion>
                    <!--should be <provided>-->
                    <groupId>jakarta.activation</groupId>
                    <artifactId>jakarta.activation-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-jaxrs2-servlet-initializer-v2</artifactId>
            <version>${swagger.version}</version>
        </dependency>

            <!--    jakarta-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <version>3.0.0</version> <!-- 使用合适的版本号 -->
        </dependency>

        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.0.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.servlet.jsp.jstl</groupId>
            <artifactId>jakarta.servlet.jsp.jstl-api</artifactId>
            <version>3.0.0</version>
            <!--When running with the jetty-maven-plugin, you
            get warnings about jsp classes being scanned from multiple locations.
            adding the "provided" scope avoids these warnings.-->
            <scope>provided</scope>
        </dependency>
        <!--            glassfish-->
        <dependency>
            <groupId>org.glassfish.hk2.external</groupId>
            <artifactId>jakarta.inject</artifactId>
            <version>2.6.1</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
                <exclusion>
                    <!--we have a proper javax.inject:javax.inject dependency-->
                    <!--also see https://stackoverflow.com/questions/25212944/why-does-hk2-repackage-everything-->
                    <groupId>org.glassfish.hk2.external</groupId>
                    <artifactId>javax.inject</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>${jersey.version}</version>
            <exclusions>
                <exclusion>
                    <!--we have a proper javax.inject:javax.inject dependency-->
                    <groupId>org.glassfish.hk2.external</groupId>
                    <artifactId>javax.inject</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-hk2</artifactId>
            <version>${jersey.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <version>${jersey.version}</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>4.0.2</version>
            <scope>runtime</scope>
        </dependency>



        <!--        neo4j-->

        <dependency>
            <groupId>org.neo4j.driver</groupId>
            <artifactId>neo4j-java-driver</artifactId>
        </dependency>



        <!--Json-->
        <dependency>
            <groupId>net.sf.ezmorph</groupId>
            <artifactId>ezmorph</artifactId>
            <version>1.0.6</version>
        </dependency>

        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.4</version>
            <classifier>jdk15</classifier>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.9</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>2.0.0</version>
        </dependency>


        <!--oslc -->
        <dependency>
            <groupId>org.eclipse.lyo.oslc4j.core</groupId>
            <artifactId>oslc4j-core</artifactId>
            <version>${version.lyo}</version>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.eclipse.lyo.oslc4j.core</groupId>-->
<!--            <artifactId>oslc4j-wink</artifactId>-->
<!--            <version>2.2.0</version>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.eclipse.lyo.oslc4j.core</groupId>
            <artifactId>oslc4j-jena-provider</artifactId>
            <version>${version.lyo}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.lyo.oslc4j.core</groupId>
            <artifactId>oslc4j-json4j-provider</artifactId>
            <version>${version.lyo}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.lyo.server</groupId>
            <artifactId>oauth-core</artifactId>
            <version>${version.lyo}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.lyo.server</groupId>
            <artifactId>oauth-consumer-store</artifactId>
            <version>${version.lyo}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.lyo.server</groupId>
            <artifactId>oauth-webapp</artifactId>
            <version>${version.lyo}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.eclipse.lyo.clients</groupId>
            <artifactId>oslc-client</artifactId>
            <version>${version.lyo}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.lyo</groupId>
            <artifactId>oslc-domains</artifactId>
            <version>${version.lyo}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>